[{"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\index.js":"1","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Router\\Router.js":"2","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\Header\\Header.js":"3","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\PokemonDetailsPage.js":"4","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\App.js":"5","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\HomePage.js":"6","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\PokedexPage.js":"7","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Constants\\Constants.js":"8","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Hooks\\UseRequestData.js":"9","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Contexts\\ContextPokemons.js":"10","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\reportWebVitals.js":"11","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\CardPokemon\\CardPokemon.js":"12","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\CardPokemon\\Styled.js":"13","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\styles.js":"14","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Global\\ContextComponent.js":"15","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\Header\\Styled.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":623,"mtime":1606308159863,"results":"19","hashOfConfig":"18"},{"size":727,"mtime":1606333714041,"results":"20","hashOfConfig":"18"},{"size":795,"mtime":1606153024654,"results":"21","hashOfConfig":"18"},{"size":258,"mtime":1606321159707,"results":"22","hashOfConfig":"18"},{"size":1510,"mtime":1606333573915,"results":"23","hashOfConfig":"18"},{"size":1363,"mtime":1606333582319,"results":"24","hashOfConfig":"18"},{"size":4952,"mtime":1606264550786,"results":"25","hashOfConfig":"18"},{"size":1558,"mtime":1606322244895,"results":"26","hashOfConfig":"18"},{"size":126,"mtime":1606235685234,"results":"27","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"18"},{"size":926,"mtime":1606326799576,"results":"29","hashOfConfig":"18"},{"size":2208,"mtime":1606321159709,"results":"30","hashOfConfig":"18"},{"size":1073,"mtime":1606332979275,"results":"31","hashOfConfig":"18"},{"size":2218,"mtime":1606326009272,"results":"32","hashOfConfig":"18"},{"size":974,"mtime":1606333747366,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n6c9yu",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\index.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Router\\Router.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\Header\\Header.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\PokemonDetailsPage.js",[],["72","73"],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\App.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\HomePage.js",["74","75"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport Header from '../Components/Header/Header'\r\nimport ContextPokemons from '../Contexts/ContextPokemons'\r\nimport CardPokemon from '../Components/CardPokemon/CardPokemon'\r\nimport {Div, MainDiv, ButtonFooter} from './styles'\r\nimport KeyboardArrowDownRoundedIcon from '@material-ui/icons/KeyboardArrowDownRounded';\r\n\r\nexport default function HomePage() {\r\n\r\n  const {data, getMorePokemons, myPokedex, setMyPokedex} = useContext(ContextPokemons)\r\n\r\n  const addPokemonToList = (newPokemon) => {\r\n    const PokemonPosition = myPokedex.findIndex((i) => i.id === newPokemon.id)\r\n    if (PokemonPosition === -1) {\r\n      setMyPokedex(myPokedex=> [...myPokedex, newPokemon])\r\n      alert(`${newPokemon.name.toUpperCase()} Capturado Com Sucesso!`)\r\n    }else{\r\n      alert(`${newPokemon.name.toUpperCase()} Ja foi Capturado!`)\r\n    }\r\n  }\r\n  console.log(myPokedex)\r\n return (\r\n   <MainDiv>\r\n      <Header\r\n      pokelist={false}\r\n      />\r\n\r\n   <Div>\r\n      \r\n      {data && data.map(pokemon=>{\r\n        return <CardPokemon key={pokemon.id}\r\n        color={pokemon.color}\r\n        name={pokemon.name}\r\n        id={pokemon.id}\r\n        type={pokemon.type}\r\n        image={pokemon.image_front}\r\n        onClickPokeball={()=>addPokemonToList(pokemon)}\r\n        messageButton='Get it'\r\n        />\r\n       \r\n      })}\r\n   </Div>\r\n    <ButtonFooter onClick={getMorePokemons}>\r\n      <KeyboardArrowDownRoundedIcon/>\r\n    </ButtonFooter>\r\n   </MainDiv>\r\n  );\r\n}\r\n","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\PokedexPage.js",["76","77"],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Constants\\Constants.js",["78","79","80"],"import axios from 'axios'\r\n\r\nexport const BASE_URL = 'https://pokeapi.co/api/v2/pokemon/'\r\n\r\n\r\n\r\n//cores\r\n/*\r\nUsage: \r\nprimary: para cores principais de background.\r\nligth: para background de elemntos secundarios ou hover de botoes\r\ndark: pode ser usado para uma borda ou para &:focus de algum elemento.\r\ntext: cor para o texto dentro do elemtento.\r\nexemplo de uso:\r\n\r\nconst Button = styled.button`\r\n    background-color: ${yellow.primary};\r\n    color: ${yellow.text};\r\n    border: 1px solid ${yellow.dark};\r\n    &:hover{\r\n        background-color: ${yellow.light};\r\n    }\r\n`\r\n*/\r\n\r\n\r\nexport const palletaCores = {\r\n\r\n     yellow : {primary:'#F2DA5E', light: '#ffff8f', dark: '#bda92c', text:'#000000'},\r\n     red : {primary:'#F52C33', light: '#ff695e', dark: '#ba000b', text:'#000000'},\r\n     green : {primary:'#7ABF5A', light: '#acf289', dark: '#498e2c', text:'#000000'},\r\n     blue : {primary:'#05DBF2', light: '#6cffff', dark: '#00a9bf', text:'#000000'},\r\n     purple : {primary:'#451659', light: '#734186', dark: '#1f002f', text:'#ffffff'},\r\n     black :  {primary:'#232323', light: '#30333A', dark: '#020202', text:'#ffffff'}\r\n}\r\n\r\n//usage:\r\n //getMorePokemons = (newRequest, setNewRequest, setPokemons)\r\n\r\nexport const getMorePokemons = (newRequest, setNewRequest, setPokemons)=>{\r\n    axios.get(newRequest).then(response=>{\r\n     setNewRequest(response.data.next)\r\n     const array = response.data.results.map(objeto=>{\r\n         axios.get(objeto.url).then(response=>{\r\n             let pokemonObj = {\r\n                 id: response.data.id,\r\n                 name: response.data.name,\r\n                 height: response.data.height,\r\n                 weight: response.data.weight,\r\n                 image_front: response.data.sprites.other.dream_world.front_default,\r\n                 type: response.data.types[0].type.name,\r\n                 moves: response.data.moves,\r\n                 color: selectColorByType(response.data.types[0].type.name, palletaCores)\r\n                 }\r\n                 response.data.stats.forEach(stat=>{\r\n                 pokemonObj[stat.stat.name]=[stat.base_stat]\r\n                 })\r\n                 setPokemons(pokemons=> [...pokemons, pokemonObj])\r\n             })\r\n     })\r\n }).catch(err=>{\r\n     //console.log(err)\r\n })\r\n   \r\n}\r\n\r\nexport const selectColorByType = (type, palletaCores)=>{\r\n    let color\r\n                        switch (type) {\r\n                            case 'electric':\r\n                                color = palletaCores.yellow.primary\r\n                                break;\r\n                            case 'grass':\r\n                                color = palletaCores.green.primary\r\n                                break;\r\n                            case 'water':\r\n                                color = palletaCores.blue.primary\r\n                                break;\r\n                            case 'steel':\r\n                                color = palletaCores.black.primary\r\n                                break;\r\n                            case 'rock':\r\n                                color = '#4D3B37'\r\n                                break;\r\n                            case 'poison':\r\n                                color = palletaCores.purple.primary\r\n                                break;\r\n                            case 'fire':\r\n                                color = palletaCores.red.light\r\n                                break;\r\n                            case 'ground':\r\n                                color = '#4D3B37'\r\n                                break;\r\n                            case 'normal':\r\n                                color = palletaCores.black.light\r\n                                break;\r\n                            case 'flying':\r\n                                color = palletaCores.blue.light\r\n                                break;\r\n                            case 'bug':\r\n                                color = palletaCores.green.light\r\n                                break;\r\n                            case 'psychic':\r\n                                color = palletaCores.yellow.light\r\n                                break;\r\n                            case 'ice':\r\n                                color = palletaCores.blue.light\r\n                                break;\r\n                            case 'dragon':\r\n                                color = palletaCores.red.primary\r\n                                break;\r\n                            case 'fairy':\r\n                                color = palletaCores.red.light\r\n                                break;\r\n                            case 'dragon':\r\n                                color = palletaCores.red.primary\r\n                                break;\r\n                            default:\r\n                                color = palletaCores.black.light\r\n                                break;\r\n                        }\r\n\r\n    return color\r\n}","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Hooks\\UseRequestData.js",["81","82"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport {palletaCores, selectColorByType }from '../Constants/Constants'\r\n\r\n\r\n\r\nexport default function useRequestData (url){\r\n\r\n    \r\n    const [arrayPokemon, setArrayPokemon] = useState([])\r\n    const [nextRequest, setNextResquest] = useState('')\r\n\r\n    useEffect(()=>{\r\n\r\n        axios.get(url).then(response=>{\r\n            setNextResquest(response.data.next)\r\n            const array = response.data.results.map(objeto=>{\r\n                axios.get(objeto.url).then(response=>{\r\n                    let pokemonObj = {\r\n                        id: response.data.id,\r\n                        name: response.data.name,\r\n                        height: response.data.height,\r\n                        weight: response.data.weight,\r\n                        image_front: response.data.sprites.other.dream_world.front_default,\r\n                        type: response.data.types[0].type.name,\r\n                        moves: response.data.moves,\r\n                        color: selectColorByType(response.data.types[0].type.name, palletaCores)\r\n                        }\r\n                        response.data.stats.forEach(stat=>{\r\n                        pokemonObj[stat.stat.name]=[stat.base_stat]\r\n                        })\r\n                        setArrayPokemon(arrayPokemon=> [...arrayPokemon, pokemonObj])\r\n                    })\r\n            })\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    },[url])\r\n    \r\n    \r\n    return [arrayPokemon, nextRequest]\r\n}","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Contexts\\ContextPokemons.js",["83"],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\reportWebVitals.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\CardPokemon\\CardPokemon.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\CardPokemon\\Styled.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\styles.js",["84","85","86","87"],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Global\\ContextComponent.js",["88","89","90"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport {BASE_URL} from '../Constants/Constants'\r\nimport useRequestData from '../Hooks/UseRequestData'\r\nimport ContextPokemons from '../Contexts/ContextPokemons';\r\nimport axios from 'axios'\r\nimport {selectColorByType, palletaCores} from '../Constants/Constants'\r\n\r\nfunction ContextComponents(props) {\r\n    \r\n    const [data, nextRequest] = useRequestData(`${BASE_URL}?limit=10`)\r\n    const [pokemons, setPokemons] = useState([])\r\n    const [newRequest, setNewRequest] = useState('')\r\n    const [myPokedex, setMyPokedex] = useState([])\r\n\r\n    useEffect(() => {\r\n      setPokemons(data)\r\n      setNewRequest(nextRequest)\r\n    }, [data])\r\n\r\n    //Paginacao para da Api, pegar mais pokemons\r\n    const getMorePokemons = ()=>{\r\n      axios.get(newRequest).then(response=>{\r\n       setNewRequest(response.data.next)\r\n       const array = response.data.results.map(objeto=>{\r\n           axios.get(objeto.url).then(response=>{\r\n               let pokemonObj = {\r\n                   id: response.data.id,\r\n                   name: response.data.name,\r\n                   height: response.data.height,\r\n                   weight: response.data.weight,\r\n                   image_front: response.data.sprites.other.dream_world.front_default,\r\n                   type: response.data.types[0].type.name,\r\n                   moves: response.data.moves,\r\n                   color: selectColorByType(response.data.types[0].type.name, palletaCores)\r\n                   }\r\n                   response.data.stats.forEach(stat=>{\r\n                   pokemonObj[stat.stat.name]=[stat.base_stat]\r\n                   })\r\n                   setPokemons(pokemons=> [...pokemons, pokemonObj])\r\n               })\r\n       })\r\n   }).catch(err=>{\r\n       //console.log(err)\r\n   })\r\n     \r\n  }\r\n    \r\n    const informations = {\r\n      data : pokemons,\r\n      nextRequest: newRequest,\r\n      getMorePokemons: getMorePokemons,\r\n      setMyPokedex: setMyPokedex,\r\n      myPokedex: myPokedex\r\n    }\r\n         \r\n    return (\r\n      <ContextPokemons.Provider value={informations}>\r\n        {props.children}\r\n        </ContextPokemons.Provider >\r\n    );\r\n  }\r\n  \r\n  export default ContextComponents;\r\n  ","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\Header\\Styled.js",["91","92","93","94"],"import styled from \"styled-components\"\r\nimport {palletaCores} from '../../Constants/Constants'\r\nconst {red, yellow, black, blue, purple } = palletaCores\r\n\r\nexport const TopMenu = styled.nav`\r\n  width: 97%;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${purple.light};\r\n  position: absolute;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  top: 0;\r\n  left: 0;\r\n  box-shadow: 5px 8px 0px ${purple.dark};\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  text-transform: uppercase;\r\n  font-size: 40px;\r\n  color: white;\r\n  \r\n`\r\n\r\nexport const Logo = styled.img`\r\n  width: 60px;\r\n  height: 60px; \r\n  margin-right: 15px;\r\n`\r\n\r\nexport const LogoContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nexport const PokedexButton = styled.button`\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  margin: 5px;\r\n  box-shadow: 5px 5px 0px ${purple.dark};\r\n  cursor: pointer;\r\n  outline: none;\r\n`",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"103","line":1,"column":38,"nodeType":"101","messageId":"102","endLine":1,"endColumn":47},{"ruleId":"99","severity":1,"message":"100","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"103","line":1,"column":38,"nodeType":"101","messageId":"102","endLine":1,"endColumn":47},{"ruleId":"99","severity":1,"message":"104","line":43,"column":12,"nodeType":"101","messageId":"102","endLine":43,"endColumn":17},{"ruleId":"105","severity":1,"message":"106","line":43,"column":52,"nodeType":"107","messageId":"108","endLine":43,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":115,"column":29,"nodeType":"111","messageId":"112","endLine":117,"endColumn":39},{"ruleId":"99","severity":1,"message":"104","line":17,"column":19,"nodeType":"101","messageId":"102","endLine":17,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":17,"column":59,"nodeType":"107","messageId":"108","endLine":17,"endColumn":61},{"ruleId":"99","severity":1,"message":"113","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":13},{"ruleId":"99","severity":1,"message":"114","line":3,"column":16,"nodeType":"101","messageId":"102","endLine":3,"endColumn":19},{"ruleId":"99","severity":1,"message":"115","line":3,"column":21,"nodeType":"101","messageId":"102","endLine":3,"endColumn":26},{"ruleId":"99","severity":1,"message":"116","line":3,"column":28,"nodeType":"101","messageId":"102","endLine":3,"endColumn":32},{"ruleId":"99","severity":1,"message":"117","line":3,"column":34,"nodeType":"101","messageId":"102","endLine":3,"endColumn":40},{"ruleId":"118","severity":1,"message":"119","line":19,"column":8,"nodeType":"120","endLine":19,"endColumn":14,"suggestions":"121"},{"ruleId":"99","severity":1,"message":"104","line":25,"column":14,"nodeType":"101","messageId":"102","endLine":25,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":25,"column":54,"nodeType":"107","messageId":"108","endLine":25,"endColumn":56},{"ruleId":"99","severity":1,"message":"114","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":11},{"ruleId":"99","severity":1,"message":"122","line":3,"column":13,"nodeType":"101","messageId":"102","endLine":3,"endColumn":19},{"ruleId":"99","severity":1,"message":"123","line":3,"column":21,"nodeType":"101","messageId":"102","endLine":3,"endColumn":26},{"ruleId":"99","severity":1,"message":"116","line":3,"column":28,"nodeType":"101","messageId":"102","endLine":3,"endColumn":32},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'array' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'React' is defined but never used.","'red' is assigned a value but never used.","'green' is assigned a value but never used.","'blue' is assigned a value but never used.","'purple' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nextRequest'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'yellow' is assigned a value but never used.","'black' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [data, nextRequest]",{"range":"129","text":"130"},[681,687],"[data, nextRequest]"]