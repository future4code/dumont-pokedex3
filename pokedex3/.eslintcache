[{"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\index.js":"1","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Router\\Router.js":"2","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\Header\\Header.js":"3","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\PokemonDetailsPage.js":"4","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\App.js":"5","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\HomePage.js":"6","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\PokedexPage.js":"7","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Constants\\Constants.js":"8","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Hooks\\UseRequestData.js":"9","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Contexts\\ContextPokemons.js":"10","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\reportWebVitals.js":"11","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\CardPokemon\\CardPokemon.js":"12","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\CardPokemon\\Styled.js":"13","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\styles.js":"14","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Global\\ContextComponent.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":623,"mtime":1606308159863,"results":"18","hashOfConfig":"17"},{"size":192,"mtime":1606152319032,"results":"19","hashOfConfig":"17"},{"size":795,"mtime":1606153024654,"results":"20","hashOfConfig":"17"},{"size":242,"mtime":1606312524491,"results":"21","hashOfConfig":"17"},{"size":802,"mtime":1606310967839,"results":"22","hashOfConfig":"17"},{"size":273,"mtime":1606152741561,"results":"23","hashOfConfig":"17"},{"size":4952,"mtime":1606264550786,"results":"24","hashOfConfig":"17"},{"size":1558,"mtime":1606311378499,"results":"25","hashOfConfig":"17"},{"size":126,"mtime":1606235685234,"results":"26","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"17"},{"size":882,"mtime":1606308140660,"results":"28","hashOfConfig":"17"},{"size":2208,"mtime":1606313539388,"results":"29","hashOfConfig":"17"},{"size":578,"mtime":1606313187453,"results":"30","hashOfConfig":"17"},{"size":2102,"mtime":1606312557802,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n6c9yu",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\index.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Router\\Router.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\Header\\Header.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\PokemonDetailsPage.js",[],["65","66"],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\App.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\HomePage.js",["67","68"],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\PokedexPage.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Constants\\Constants.js",["69","70","71"],"import axios from 'axios'\r\n\r\nexport const BASE_URL = 'https://pokeapi.co/api/v2/pokemon/'\r\n\r\n\r\n\r\n//cores\r\n/*\r\nUsage: \r\nprimary: para cores principais de background.\r\nligth: para background de elemntos secundarios ou hover de botoes\r\ndark: pode ser usado para uma borda ou para &:focus de algum elemento.\r\ntext: cor para o texto dentro do elemtento.\r\nexemplo de uso:\r\n\r\nconst Button = styled.button`\r\n    background-color: ${yellow.primary};\r\n    color: ${yellow.text};\r\n    border: 1px solid ${yellow.dark};\r\n    &:hover{\r\n        background-color: ${yellow.light};\r\n    }\r\n`\r\n*/\r\n\r\n\r\nexport const palletaCores = {\r\n\r\n     yellow : {primary:'#F2DA5E', light: '#ffff8f', dark: '#bda92c', text:'#000000'},\r\n     red : {primary:'#F52C33', light: '#ff695e', dark: '#ba000b', text:'#000000'},\r\n     green : {primary:'#7ABF5A', light: '#acf289', dark: '#498e2c', text:'#000000'},\r\n     blue : {primary:'#05DBF2', light: '#6cffff', dark: '#00a9bf', text:'#000000'},\r\n     purple : {primary:'#451659', light: '#734186', dark: '#1f002f', text:'#ffffff'},\r\n     black :  {primary:'#232323', light: '#30333A', dark: '#020202', text:'#ffffff'}\r\n}\r\n\r\n//usage:\r\n //getMorePokemons = (newRequest, setNewRequest, setPokemons)\r\n\r\nexport const getMorePokemons = (newRequest, setNewRequest, setPokemons)=>{\r\n    axios.get(newRequest).then(response=>{\r\n     setNewRequest(response.data.next)\r\n     const array = response.data.results.map(objeto=>{\r\n         axios.get(objeto.url).then(response=>{\r\n             let pokemonObj = {\r\n                 id: response.data.id,\r\n                 name: response.data.name,\r\n                 height: response.data.height,\r\n                 weight: response.data.weight,\r\n                 image_front: response.data.sprites.other.dream_world.front_default,\r\n                 type: response.data.types[0].type.name,\r\n                 moves: response.data.moves,\r\n                 color: selectColorByType(response.data.types[0].type.name, palletaCores)\r\n                 }\r\n                 response.data.stats.forEach(stat=>{\r\n                 pokemonObj[stat.stat.name]=[stat.base_stat]\r\n                 })\r\n                 setPokemons(pokemons=> [...pokemons, pokemonObj])\r\n             })\r\n     })\r\n }).catch(err=>{\r\n     //console.log(err)\r\n })\r\n   \r\n}\r\n\r\nexport const selectColorByType = (type, palletaCores)=>{\r\n    let color\r\n                        switch (type) {\r\n                            case 'electric':\r\n                                color = palletaCores.yellow.primary\r\n                                break;\r\n                            case 'grass':\r\n                                color = palletaCores.green.primary\r\n                                break;\r\n                            case 'water':\r\n                                color = palletaCores.blue.primary\r\n                                break;\r\n                            case 'steel':\r\n                                color = palletaCores.black.primary\r\n                                break;\r\n                            case 'rock':\r\n                                color = '#4D3B37'\r\n                                break;\r\n                            case 'poison':\r\n                                color = palletaCores.purple.primary\r\n                                break;\r\n                            case 'fire':\r\n                                color = palletaCores.red.light\r\n                                break;\r\n                            case 'ground':\r\n                                color = '#4D3B37'\r\n                                break;\r\n                            case 'normal':\r\n                                color = palletaCores.black.light\r\n                                break;\r\n                            case 'flying':\r\n                                color = palletaCores.blue.light\r\n                                break;\r\n                            case 'bug':\r\n                                color = palletaCores.green.light\r\n                                break;\r\n                            case 'psychic':\r\n                                color = palletaCores.yellow.light\r\n                                break;\r\n                            case 'ice':\r\n                                color = palletaCores.blue.light\r\n                                break;\r\n                            case 'dragon':\r\n                                color = palletaCores.red.primary\r\n                                break;\r\n                            case 'fairy':\r\n                                color = palletaCores.red.light\r\n                                break;\r\n                            case 'dragon':\r\n                                color = palletaCores.red.primary\r\n                                break;\r\n                            default:\r\n                                color = palletaCores.black.light\r\n                                break;\r\n                        }\r\n\r\n    return color\r\n}","C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Hooks\\UseRequestData.js",["72","73"],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Contexts\\ContextPokemons.js",["74"],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\reportWebVitals.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\CardPokemon\\CardPokemon.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Components\\CardPokemon\\Styled.js",[],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Screens\\styles.js",["75","76","77","78","79"],"C:\\Users\\surface pro 5\\Desktop\\Pokedex-project\\dumont-pokedex3\\pokedex3\\src\\Global\\ContextComponent.js",["80","81","82"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport {BASE_URL} from '../Constants/Constants'\r\nimport useRequestData from '../Hooks/UseRequestData'\r\nimport ContextPokemons from '../Contexts/ContextPokemons';\r\nimport axios from 'axios'\r\nimport {selectColorByType, palletaCores} from '../Constants/Constants'\r\n\r\nfunction ContextComponents(props) {\r\n    \r\n    const [data, nextRequest] = useRequestData(`${BASE_URL}?limit=10`)\r\n    const [pokemons, setPokemons] = useState([])\r\n    const [newRequest, setNewRequest] = useState('')\r\n\r\n    useEffect(() => {\r\n      setPokemons(data)\r\n      setNewRequest(nextRequest)\r\n    }, [data])\r\n\r\n    //Paginacao para da Api, pegar mais pokemons\r\n    const getMorePokemons = ()=>{\r\n      axios.get(newRequest).then(response=>{\r\n       setNewRequest(response.data.next)\r\n       const array = response.data.results.map(objeto=>{\r\n           axios.get(objeto.url).then(response=>{\r\n               let pokemonObj = {\r\n                   id: response.data.id,\r\n                   name: response.data.name,\r\n                   height: response.data.height,\r\n                   weight: response.data.weight,\r\n                   image_front: response.data.sprites.other.dream_world.front_default,\r\n                   type: response.data.types[0].type.name,\r\n                   moves: response.data.moves,\r\n                   color: selectColorByType(response.data.types[0].type.name, palletaCores)\r\n                   }\r\n                   response.data.stats.forEach(stat=>{\r\n                   pokemonObj[stat.stat.name]=[stat.base_stat]\r\n                   })\r\n                   setPokemons(pokemons=> [...pokemons, pokemonObj])\r\n               })\r\n       })\r\n   }).catch(err=>{\r\n       //console.log(err)\r\n   })\r\n     \r\n  }\r\n    \r\n    const informations = {\r\n      data : pokemons,\r\n      nextRequest: newRequest,\r\n      getMorePokemons: getMorePokemons\r\n    }\r\n         \r\n    return (\r\n      <ContextPokemons.Provider value={informations}>\r\n        {props.children}\r\n        </ContextPokemons.Provider >\r\n    );\r\n  }\r\n  \r\n  export default ContextComponents;\r\n  ",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":28,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"91","line":1,"column":38,"nodeType":"89","messageId":"90","endLine":1,"endColumn":47},{"ruleId":"87","severity":1,"message":"92","line":43,"column":12,"nodeType":"89","messageId":"90","endLine":43,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":43,"column":52,"nodeType":"95","messageId":"96","endLine":43,"endColumn":54},{"ruleId":"97","severity":1,"message":"98","line":115,"column":29,"nodeType":"99","messageId":"100","endLine":117,"endColumn":39},{"ruleId":"87","severity":1,"message":"92","line":17,"column":19,"nodeType":"89","messageId":"90","endLine":17,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":17,"column":59,"nodeType":"95","messageId":"96","endLine":17,"endColumn":61},{"ruleId":"87","severity":1,"message":"101","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"102","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"103","line":3,"column":16,"nodeType":"89","messageId":"90","endLine":3,"endColumn":19},{"ruleId":"87","severity":1,"message":"104","line":3,"column":21,"nodeType":"89","messageId":"90","endLine":3,"endColumn":26},{"ruleId":"87","severity":1,"message":"105","line":3,"column":28,"nodeType":"89","messageId":"90","endLine":3,"endColumn":32},{"ruleId":"87","severity":1,"message":"106","line":3,"column":34,"nodeType":"89","messageId":"90","endLine":3,"endColumn":40},{"ruleId":"107","severity":1,"message":"108","line":18,"column":8,"nodeType":"109","endLine":18,"endColumn":14,"suggestions":"110"},{"ruleId":"87","severity":1,"message":"92","line":24,"column":14,"nodeType":"89","messageId":"90","endLine":24,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":24,"column":54,"nodeType":"95","messageId":"96","endLine":24,"endColumn":56},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'array' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'React' is defined but never used.","'yellow' is assigned a value but never used.","'red' is assigned a value but never used.","'green' is assigned a value but never used.","'blue' is assigned a value but never used.","'purple' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nextRequest'. Either include it or remove the dependency array.","ArrayExpression",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [data, nextRequest]",{"range":"116","text":"117"},[629,635],"[data, nextRequest]"]